
		# noether(|j|j>>a,)          #smallest value greater than a bound-> worthwhile.
		# 	#atomically greater than a.
		# 	lj:J,
		# 	lp:lj>>a,
		# 	p:[j:J,j>>a]j=>lj

		# 	target:[x:J,x=>lj]x>>a <satisfied by transitive property w lj.>
		# 	target:[x:J,x>>a]a=>lj <satisfied by p.>
		# 	target:lj>>a           <satisfied by lp.>



		# noether(|j|[x:J,x<<a]x<=j,)#smallest value such that everything less than a is less than or equal to j.
		# 	#this will be atomically less than a
		# 	lj:J,
		# 	lp:[x:J,x<<a]x<=lj,
		# 	p:[j:J,[x:J,x<<a]x<=j]j=>lj


		# 	[j:J,j<<lj,x:J,x<<a]x>>j



		# 	[x:J,x<<a]x<=a

		# 	p(a,|x,xq|connex(xq)):a=>


		# 	a is a bound. -> a is greater than or equal to lj.


		# 	DEC(a<=lj,
		# 		|s|,
		# 		|s|s
		# 	)




		# 	target:[x:J,x<=lj]x<<a      <would be satisfied with transitive property>
		# 	target:[x:J,x<<a]a<=lj      <satisfied by lp.>
		# 	target:a>>lj                



		# right_bound_noether:[P:[J]U,Pj:={j:J,p:P(j)},Pj,k:[j:J,pj:Pj]pj.j<=j]{
		# 	l:Pj,
		# 	p:[k:Pj]k.j=>l.j
		# } = (

		# ),



		# noether(|j|[x:J,x<=a]x<<j,)#smallest value such that everyihing less than or equal to a is less than j.
			#this will be atomically greater than a


